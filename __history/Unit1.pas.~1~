unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.Phys.FB,
  FireDAC.Phys.FBDef, FireDAC.VCLUI.Wait, FireDAC.Stan.Param, FireDAC.DatS,
  FireDAC.DApt.Intf, FireDAC.DApt, Vcl.StdCtrls, Data.DB, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client;

type
  TForm1 = class(TForm)
    FDConnection1: TFDConnection;
    FDQuery1: TFDQuery;
    Button1: TButton;
    Memo1: TMemo;
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}


procedure TForm1.Button1Click(Sender: TObject);
begin
FDConnection1.Connected := true;  {
FDQuery1.SQL.Text := 'insert into TABLE_NAME (id, firstname, lastname) values (5, ASD, S)';
FDQuery1.Open();                   }

FDQuery1.Close;
FDQuery1.SQL.Text := 'SELECT * FROM Table_Name';
FDQuery1.Open();



Memo1.Clear;
while not FDQuery1.Eof do
begin
   Memo1.Lines.Add(FDQuery1.FieldByName('FIRSTNAME').AsString);
   Memo1.Lines.Add(IntToStr(FDQuery1.RecordCount));
   FDQuery1.Next;
end;


end;

end.
